<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE outline PUBLIC "-//omnigroup.com//DTD OUTLINE 3.0//EN" "http://www.omnigroup.com/namespace/OmniOutliner/xmloutline-v3.dtd">
<outline xmlns="http://www.omnigroup.com/namespace/OmniOutliner/v3">
  <style-attribute-registry>
    <style-attribute version="0" key="font-family" group="font" name="family" class="string">Helvetica</style-attribute>
    <style-attribute version="1" key="font-fill" group="font" name="fill color" class="color">
      <color w="0"/>
    </style-attribute>
    <style-attribute version="0" key="font-size" group="font" name="size" class="number" integral="0" min="1" max="65536">12</style-attribute>
    <style-attribute version="0" key="font-weight" group="font" name="weight" class="number" integral="1" min="1" max="14">5</style-attribute>
    <style-attribute version="0" key="kerning-adjust" group="kerning" name="adjust" class="number" integral="0" min="-1000" max="1000">NaN</style-attribute>
    <style-attribute version="0" key="paragraph-alignment" group="paragraph" name="alignment" class="enum">
      <enum-name-table default-value="4">
        <enum-name-table-element value="0" name="left"/>
        <enum-name-table-element value="1" name="right"/>
        <enum-name-table-element value="2" name="center"/>
        <enum-name-table-element value="3" name="justified"/>
        <enum-name-table-element value="4" name="natural"/>
      </enum-name-table>
    </style-attribute>
    <style-attribute version="0" key="paragraph-base-writing-direction" group="paragraph" name="writing direction" class="enum">
      <enum-name-table default-value="-1">
        <enum-name-table-element value="-1" name="natural"/>
        <enum-name-table-element value="0" name="left-to-right"/>
        <enum-name-table-element value="1" name="right-to-left"/>
      </enum-name-table>
    </style-attribute>
    <style-attribute version="0" key="paragraph-line-height-multiple" group="paragraph" name="line height multiple" class="number" integral="0" min="0" max="1000">0</style-attribute>
    <style-attribute version="0" key="paragraph-minimum-line-height" group="paragraph" name="minimum line height" class="number" integral="1" min="-1000" max="1000">0</style-attribute>
    <style-attribute version="0" key="paragraph-spacing" group="paragraph" name="spacing" class="number" integral="1" min="-1000" max="1000">0</style-attribute>
    <style-attribute version="0" key="paragraph-tab-stop-interval" group="paragraph" name="tab stop interval" class="number" integral="0" min="0" max="1000">0</style-attribute>
    <style-attribute version="0" key="text-background-color" group="text" name="background color" class="color">
      <color w="0" a="0"/>
    </style-attribute>
  </style-attribute-registry>
  <named-styles>
    <named-style id="nU7Pax9sHwm" name="Highlight: Yellow" display-order="0">
      <style>
        <value key="text-background-color">
          <color r="1" g="0.733334" b="0" a="0.25"/>
        </value>
      </style>
    </named-style>
    <named-style id="m6c_M2fT6yP" name="Highlight: Red" display-order="1">
      <style>
        <value key="text-background-color">
          <color r="0.94902" g="0.376471" b="0.466667" a="0.25"/>
        </value>
      </style>
    </named-style>
    <named-style id="auoqZ5xVKeG" name="Highlight: Green" display-order="2">
      <style>
        <value key="text-background-color">
          <color r="0.406736" g="0.736132" b="0.210461" a="0.25"/>
        </value>
      </style>
    </named-style>
    <named-style id="hE9mXgl4a8m" name="Purple" display-order="3">
      <style>
        <value key="font-fill">
          <color r="0.471952" g="0.30641" b="0.653384"/>
        </value>
      </style>
    </named-style>
    <named-style id="l2kopvXC4ak" name="Blue" display-order="4">
      <style>
        <value key="font-fill">
          <color r="0.183955" g="0.450372" b="0.751677"/>
        </value>
      </style>
    </named-style>
    <named-style id="f7F2187eZ56" name="Bondi" display-order="5">
      <style>
        <value key="font-fill">
          <color r="0" g="0.643391" b="0.646973"/>
        </value>
      </style>
    </named-style>
    <named-style id="kJhkVDl2Xsd" name="Green" display-order="6">
      <style>
        <value key="font-fill">
          <color r="0.303949" g="0.550102" b="0.157275"/>
        </value>
      </style>
    </named-style>
    <named-style id="inNRQJ-da6E" name="Yellow" display-order="7">
      <style>
        <value key="font-fill">
          <color r="0.649839" g="0.476549" b="0"/>
        </value>
      </style>
    </named-style>
    <named-style id="nAm7imW-teW" name="Orange" display-order="8">
      <style>
        <value key="font-fill">
          <color r="0.745945" g="0.424165" b="0.225246"/>
        </value>
      </style>
    </named-style>
    <named-style id="jtC-ndQ7Pcw" name="Red" display-order="9">
      <style>
        <value key="font-fill">
          <color r="0.754034" g="0.299121" b="0.370785"/>
        </value>
      </style>
    </named-style>
    <named-style id="dI8s4BxgdIs" name="Graphite" display-order="10">
      <style>
        <value key="font-fill">
          <color r="0.356994" g="0.413713" b="0.550505"/>
        </value>
      </style>
    </named-style>
  </named-styles>
  <settings>
    <base-style>
      <style>
        <value key="font-family">Helvetica Neue</value>
        <value key="font-fill">
          <color r="0.103869" g="0.118888" b="0.148926"/>
        </value>
        <value key="font-size">13</value>
        <value key="paragraph-base-writing-direction">left-to-right</value>
        <value key="paragraph-line-height-multiple">1.1</value>
        <value key="text-background-color">
          <color r="0.810195" g="0.823036" b="0.848718"/>
        </value>
      </style>
    </base-style>
    <print-info>
      <print-info-key name="NSPaperName" type="string"></print-info-key>
      <print-info-key name="OOScaleDocumentToFitPageWidth" type="boolean">true</print-info-key>
    </print-info>
    <auto-generate-level-styles>no</auto-generate-level-styles>
  </settings>
  <editor content-size="{1092, 1344}" vertical-scrollbar-visible-width="15" column-titles-display-mode="auto" status-visible="no" hide-attachment-tags="yes" is-spellchecking-enabled="yes">
    <drawer display="sections" width="185" palette-height="478"/>
    <note-split-view height="141"/>
    <selected-rows ids="cdQ0XKFVPVI"/>
    <selected-columns ids="jFqHUGd_Dg1"/>
    <selected-characters range="{61, 0}"/>
  </editor>
  <outline-title>
    <text>
      <p>
        <run>
          <style>
            <value key="font-family">Helvetica</value>
            <value key="paragraph-alignment">center</value>
          </style>
          <lit><cell variable="OODocumentFilenameVariableIdentifier"/></lit>
        </run>
      </p>
    </text>
  </outline-title>
  <columns>
    <column id="dTpN3JwYpBn" type="text" width="18" minimum-width="18" maximum-width="18" text-export-width="1" is-note-column="yes">
      <style>
        <value key="font-fill">
          <color r="0.208405" g="0.238539" b="0.298807" a="0.65"/>
        </value>
      </style>
      <title>
        <text>
          <p/>
        </text>
      </title>
    </column>
    <column id="jFqHUGd_Dg1" type="text" width="1056" minimum-width="13" maximum-width="1000000" text-export-width="72" is-outline-column="yes">
      <title>
        <text>
          <p>
            <run>
              <lit>Topic</lit>
            </run>
          </p>
        </text>
      </title>
    </column>
  </columns>
  <root>
    <style>
      <value key="font-weight">6</value>
    </style>
    <style>
      <value key="font-fill">
        <color r="0.211129" g="0.241657" b="0.302713"/>
      </value>
      <value key="font-size">30</value>
      <value key="font-weight">3</value>
    </style>
    <style>
      <value key="font-size">18</value>
    </style>
    <style>
      <value key="font-weight">6</value>
    </style>
    <item id="oH_yt0FVDuw" expanded="yes">
      <values>
        <text>
          <p>
            <run>
              <style>
                <value key="font-fill">
                  <color space="srgb" r="0.25098" g="0.25098" b="0.25098"/>
                </value>
                <value key="font-weight">9</value>
                <value key="kerning-adjust">0</value>
                <value key="paragraph-line-height-multiple">0</value>
                <value key="paragraph-minimum-line-height">36</value>
                <value key="paragraph-spacing">18</value>
                <value key="paragraph-tab-stop-interval">36</value>
                <value key="text-background-color">
                  <color w="0" a="0"/>
                </value>
              </style>
              <lit>Delay Evaluation with LazyBox</lit>
            </run>
          </p>
        </text>
      </values>
      <children>
        <item id="oL9HlkAiv7o" expanded="yes">
          <values>
            <text>
              <p>
                <run>
                  <lit>What is Lazy Evaluation</lit>
                </run>
              </p>
            </text>
          </values>
          <children>
            <item id="gnvMud-7EJL">
              <values>
                <text>
                  <p>
                    <run>
                      <lit>Strict vs. Lazy</lit>
                    </run>
                  </p>
                </text>
              </values>
              <children>
                <item id="afutb3Et5EF">
                  <values>
                    <text>
                      <p>
                        <run>
                          <lit>Strict is “call by value”, Lazy is “call by need”</lit>
                        </run>
                      </p>
                    </text>
                  </values>
                </item>
              </children>
            </item>
            <item id="opHfjDX5YB9">
              <values>
                <text>
                  <p>
                    <run>
                      <lit>Advantages/Disadvantages of lazy</lit>
                    </run>
                  </p>
                </text>
              </values>
            </item>
            <item id="baNqp2wI_L_">
              <values>
                <text>
                  <p>
                    <run>
                      <lit>JavaScript and consequently PureScript are strict</lit>
                    </run>
                  </p>
                </text>
              </values>
              <children>
                <item id="dw8DI9CGT5h">
                  <values>
                    <text>
                      <p>
                        <run>
                          <lit>Show an example in PureScript -&gt; JavaScript</lit>
                        </run>
                      </p>
                    </text>
                  </values>
                </item>
              </children>
            </item>
            <item id="aLbXGROWfk4">
              <values>
                <text>
                  <p>
                    <run>
                      <lit>Advantages/Disadvantages of strict languages</lit>
                    </run>
                  </p>
                </text>
              </values>
              <children>
                <item id="oRV8if4sQi9">
                  <values>
                    <text>
                      <p>
                        <run>
                          <lit>Hardware architectures in common use are optimized for strict languages, so even the best compilers for non-strict languages produce slower code.</lit>
                        </run>
                      </p>
                    </text>
                  </values>
                </item>
              </children>
            </item>
          </children>
        </item>
        <item id="ifO7G5rRKkG" expanded="yes">
          <values>
            <text>
              <p>
                <run>
                  <lit>Currying</lit>
                </run>
              </p>
            </text>
          </values>
          <children>
            <item id="d9aBWJBIHQv" expanded="yes">
              <values>
                <text>
                  <p>
                    <run>
                      <lit>In PureScript, all functions take one argument and return one result.  Just as we saw in the transpiled example above, when you have a function that takes multiple arguments (e.g., f :: x -&gt; y -&gt; z) then PureScript will compile them to JavaScript as a sequence of functions, each taking one argument and returning one value.  </lit>
                    </run>
                  </p>
                </text>
              </values>
              <children>
                <item id="eNwizqkECsM">
                  <values>
                    <text>
                      <p>
                        <run>
                          <lit>var f = function(x) {  return function(y) { return x + y; }</lit>
                        </run>
                      </p>
                    </text>
                  </values>
                </item>
                <item id="c2pCp4RqiCI">
                  <values>
                    <text>
                      <p>
                        <run>
                          <lit>Here f takes the first argument x, and returns a new function that takes the argument y.  When this function is executed, it will return x + y.</lit>
                        </run>
                      </p>
                    </text>
                  </values>
                </item>
              </children>
            </item>
            <item id="pEePAA6UC8q" expanded="yes">
              <values>
                <text>
                  <p>
                    <run>
                      <lit>Why?  </lit>
                    </run>
                  </p>
                </text>
              </values>
              <note>
                <text>
                  <p>
                    <run>
                      <lit>Provide a reference</lit>
                    </run>
                  </p>
                </text>
              </note>
              <children>
                <item id="fv3L0J1I-Pr" expanded="yes">
                  <values>
                    <text>
                      <p>
                        <run>
                          <lit>Because FP is based on Alonzo Church’s lamda calculus.  And in lambda calculus, when a function takes multiple arguments, each lamda will be bound to one argument to produce a sequence of functions</lit>
                        </run>
                      </p>
                    </text>
                  </values>
                  <children>
                    <item id="itu-tb1WhvA">
                      <values>
                        <text>
                          <p>
                            <run>
                              <lit>λxy.xy = λx(λy.xy)</lit>
                            </run>
                          </p>
                        </text>
                      </values>
                    </item>
                  </children>
                </item>
              </children>
            </item>
            <item id="iAyv-mpLNVb" expanded="yes">
              <values>
                <text>
                  <p>
                    <run>
                      <lit>Advantages</lit>
                    </run>
                  </p>
                </text>
              </values>
              <children>
                <item id="nEaX4nqRXkt" expanded="yes">
                  <values>
                    <text>
                      <p>
                        <run>
                          <lit>Partial function application</lit>
                        </run>
                      </p>
                    </text>
                  </values>
                  <children>
                    <item id="kh9k-7tM4iM">
                      <values>
                        <text>
                          <p>
                            <run>
                              <lit>add :: Int -&gt; Int -&gt; Int</lit>
                            </run>
                          </p>
                        </text>
                      </values>
                    </item>
                    <item id="mPq_x3__kzZ">
                      <values>
                        <text>
                          <p>
                            <run>
                              <lit>add = x + y</lit>
                            </run>
                          </p>
                        </text>
                      </values>
                    </item>
                    <item id="jVxcJTvZS6M">
                      <values>
                        <text>
                          <p>
                            <run>
                              <lit>&gt; add10 = add 10</lit>
                            </run>
                          </p>
                        </text>
                      </values>
                    </item>
                    <item id="pWXG9US0nOz">
                      <values>
                        <text>
                          <p>
                            <run>
                              <lit>&gt; add10 5</lit>
                            </run>
                          </p>
                        </text>
                      </values>
                    </item>
                    <item id="e0ikCN_zotk">
                      <values>
                        <text>
                          <p>
                            <run>
                              <lit>&lt; 15</lit>
                            </run>
                          </p>
                        </text>
                      </values>
                    </item>
                  </children>
                </item>
              </children>
            </item>
            <item id="hQA9s02cSMZ" expanded="yes">
              <values>
                <text>
                  <p>
                    <run>
                      <lit>Disadvantages</lit>
                    </run>
                  </p>
                </text>
              </values>
              <children>
                <item id="cZmmzhY_u7k">
                  <values>
                    <text>
                      <p>
                        <run>
                          <lit>Performance penality</lit>
                        </run>
                      </p>
                    </text>
                  </values>
                </item>
                <item id="dGfDD8SzLda" expanded="yes">
                  <values>
                    <text>
                      <p>
                        <run>
                          <lit>Workaround</lit>
                        </run>
                      </p>
                    </text>
                  </values>
                  <children>
                    <item id="lL7S5zdtZML">
                      <values>
                        <text>
                          <p>
                            <run>
                              <lit>Data.Function.Uncurried - mkfn2</lit>
                            </run>
                          </p>
                        </text>
                      </values>
                    </item>
                  </children>
                </item>
              </children>
            </item>
          </children>
        </item>
        <item id="et33PdtveaD" expanded="yes">
          <values>
            <text>
              <p>
                <run>
                  <lit>Lazy Box</lit>
                </run>
              </p>
            </text>
          </values>
          <children>
            <item id="hj9GfGFog0O">
              <values>
                <text>
                  <p>
                    <run>
                      <lit>Show Brian’s example Lazy -&gt; Lazy Box</lit>
                    </run>
                  </p>
                </text>
              </values>
            </item>
          </children>
        </item>
        <item id="bOoEBZ_7zXL" expanded="yes">
          <values>
            <text>
              <p>
                <run>
                  <lit>Uses for Lazy</lit>
                </run>
              </p>
            </text>
          </values>
          <children>
            <item id="adWGYoaWR3H">
              <values>
                <text>
                  <p>
                    <run>
                      <lit>Remind everyone that PureScript is strictly evaluated.  Therefore, in contrast to Haskell, you must explicitly use lazy evaluation.</lit>
                    </run>
                  </p>
                </text>
              </values>
            </item>
            <item id="n_Uw0FJ3K-5" expanded="yes">
              <values>
                <text>
                  <p>
                    <run>
                      <lit>Infinite lists</lit>
                    </run>
                  </p>
                </text>
              </values>
              <children>
                <item id="i-Y0I9sp14M">
                  <values>
                    <text>
                      <p>
                        <run>
                          <lit>My project euler series (Problem 2)</lit>
                        </run>
                      </p>
                    </text>
                  </values>
                </item>
              </children>
            </item>
            <item id="eBMAGV-k9km">
              <values>
                <text>
                  <p>
                    <run>
                      <lit>[Lazy evaluation] makes it practical to modularize a program as a generator that constructs a large number of possible answers, and a selector that chooses the appropriate one.</lit>
                    </run>
                  </p>
                </text>
              </values>
            </item>
            <item id="ilRTzKZ0vTY" expanded="yes">
              <values>
                <text>
                  <p>
                    <run>
                      <lit>Sorting</lit>
                    </run>
                  </p>
                </text>
              </values>
              <children>
                <item id="fj_UXDhxPr6" expanded="yes">
                  <values>
                    <text>
                      <p>
                        <run>
                          <lit>head &lt;&lt;&lt; sort</lit>
                        </run>
                      </p>
                    </text>
                  </values>
                  <children>
                    <item id="cdQ0XKFVPVI">
                      <values>
                        <text>
                          <p>
                            <run>
                              <lit>We stop as soon as we determine the head of the list.  So it’s no longer O(n log n), it’s O(n) </lit>
                            </run>
                          </p>
                        </text>
                      </values>
                    </item>
                  </children>
                </item>
              </children>
            </item>
            <item id="iBpQiV9clqt" expanded="yes">
              <values>
                <text>
                  <p>
                    <run>
                      <lit>References for this section</lit>
                    </run>
                  </p>
                </text>
              </values>
              <children>
                <item id="bxQvAn-1fwX">
                  <values>
                    <text>
                      <p>
                        <run>
                          <lit><cell href="https://stackoverflow.com/questions/12057658/lazy-evaluation-and-time-complexity" name="https://stackoverflow.com/questions/12057658/lazy-evaluation-and-time-complexity" type="link"/></lit>
                        </run>
                      </p>
                    </text>
                  </values>
                </item>
                <item id="l1_22IWdpmZ">
                  <values>
                    <text>
                      <p>
                        <run>
                          <lit><cell href="https://softwareengineering.stackexchange.com/questions/163985/why-is-the-concept-of-lazy-evaluation-useful" name="https://softwareengineering.stackexchange.com/questions/163985/why-is-the-concept-of-lazy-evaluation-useful" type="link"/></lit>
                        </run>
                      </p>
                    </text>
                  </values>
                </item>
              </children>
            </item>
          </children>
        </item>
        <item id="ftOVdqaEq2W" expanded="yes">
          <values>
            <text>
              <p>
                <run>
                  <lit>I should write about writing some tests!</lit>
                </run>
              </p>
            </text>
          </values>
          <children>
            <item id="c_dDVE_xMvF">
              <values>
                <text>
                  <p>
                    <run>
                      <lit>Oh the dreaded tests</lit>
                    </run>
                  </p>
                </text>
              </values>
            </item>
            <item id="hJL8XLfpOnn">
              <values>
                <text>
                  <p>
                    <run>
                      <lit>The old saying goes, If it compiles then it will work the first time</lit>
                    </run>
                  </p>
                </text>
              </values>
            </item>
            <item id="by1OwZIVAde">
              <values>
                <text>
                  <p>
                    <run>
                      <lit>Strongly typed languages don’t mitigate testing for more obscure errors</lit>
                    </run>
                  </p>
                </text>
              </values>
            </item>
          </children>
        </item>
      </children>
    </item>
  </root>
</outline>
